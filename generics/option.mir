// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at src/option.rs:1:11: 1:11
    let _1: std::option::Option<i32>;    // in scope 0 at src/option.rs:2:9: 2:16
    scope 1 {
        debug integer => _1;             // in scope 1 at src/option.rs:2:9: 2:16
        let _2: std::option::Option<f64>; // in scope 1 at src/option.rs:3:9: 3:14
        scope 2 {
            debug float => _2;           // in scope 2 at src/option.rs:3:9: 3:14
        }
    }

    bb0: {
        Deinit(_1);                      // scope 0 at src/option.rs:2:19: 2:26
        ((_1 as Some).0: i32) = const 5_i32; // scope 0 at src/option.rs:2:19: 2:26
        discriminant(_1) = 1;            // scope 0 at src/option.rs:2:19: 2:26
        Deinit(_2);                      // scope 1 at src/option.rs:3:17: 3:26
        ((_2 as Some).0: f64) = const 5f64; // scope 1 at src/option.rs:3:17: 3:26
        discriminant(_2) = 1;            // scope 1 at src/option.rs:3:17: 3:26
        return;                          // scope 0 at src/option.rs:4:2: 4:2
    }
}
